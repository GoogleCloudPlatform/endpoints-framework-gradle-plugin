plugins {
  id 'java'
  id 'groovy'
  id 'maven'
  id 'java-gradle-plugin'
  id 'com.github.sherter.google-java-format' version '0.6'
  id 'net.researchgate.release' version '2.6.0'
}

repositories {
  mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'com.google.cloud.tools'

dependencies {
  compile localGroovy()
  compile gradleApi()
  compile "com.google.guava:guava:30.1-jre"
  compile "com.google.endpoints:endpoints-framework-tools:2.2.2"

  testCompile 'commons-io:commons-io:2.8.0'
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  testCompile 'org.mockito:mockito-core:2.1.0'
  testCompile 'junit:junit:4.13.1'
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name,
        'Implementation-Version': version,
        'Built-By': System.getProperty('user.name'),
        'Built-Date': new Date(),
        'Built-JDK': System.getProperty('java.version'),
        'Built-Gradle': gradle.gradleVersion
  }
}

test {
  testLogging {
    showStandardStreams = true
    exceptionFormat = 'full'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.0'
}

/* GOOGLE JAVA FORMAT */
check.dependsOn verifyGoogleJavaFormat
// to auto-format run ./gradlew googleJavaFormat
/* GOOGLE JAVA FORMAT */

/* CHECKSTYLE */
apply plugin: 'checkstyle'
checkstyle {
  toolVersion = "7.6.1"
  // get the google_checks.xml file from the actual tool we're invoking
  config = resources.text.fromArchiveEntry(configurations.checkstyle[0], 'google_checks.xml')
  maxErrors = 0
  maxWarnings = 0
}
/* CHECKSTYLE */

/* RELEASING */
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task writePom {
    project.afterEvaluate {
        def outputFile = file("$buildDir/pom/${project.name}-${project.version}.pom")
        outputs.file outputFile

        doLast {
            pom {
                project {
                    name 'Endpoints Framework Gradle Plugin'
                    description 'This Gradle plugin provides tasks and configurations to generate Google Cloud Endpoints Framework client code and discovery docs'
                    url 'https://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin'
                    inceptionYear '2016'

                    scm {
                        url 'https://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin'
                        connection 'scm:https://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin.git'
                        developerConnection 'scm:git://github.com/GoogleCloudPlatform/endpoints-framework-gradle-plugin.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'loosebazooka'
                            name 'Appu Goundan'
                            email 'appu@google.com'
                        }
                    }
                }
            }.writeTo(outputFile)
        }
    }
}

task prepareRelease(type: Copy) {
    from jar
    from sourceJar
    from javadocJar
    from writePom

    into "${buildDir}/release-artifacts"

    dependsOn build
    dependsOn cleanPrepareRelease
}

// Release helper (git release commits and version updates)
release {
    tagTemplate = 'v$version'
    git {
        requireBranch = /^release_v\d+.*$/  //regex
    }
}
/* RELEASING */
